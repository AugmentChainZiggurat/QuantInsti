import pandas as pd

my_series_int = pd.Series([10,20,30,40,50,60])
print (my_series_int)

countries = ['India', 'USA', 'Japan', 'Russia', 'China']
leaders = ['ND', 'DT', 'SA', 'VP','XJ']
s = pd.Series(leaders, index=countries) #index is explicity here
s

#adicionando o índice a série de stocks_set1
stocks_set1 = ['Alphabet', 'IBM', 'Tesla', 'Infosys']
S1 = pd.Series([100,250,300,500], index = stocks_set1)
print (S1)
print ("\n")

stocks_set2 = ['Alphabet', 'IBM', 'Tesla', 'Infosys']
S2 = pd.Series ([500,400,110,700], index = stocks_set2)
print(S2)
print ("\n")
print (S1 + S2)
#somar os valores dos índices (S1 + S2)

stocks_set1 = ['Alphabet', 'IBM', 'Tesla', 'Infosys']
stocks_set2 = ['Alphabet', 'Facebook','Tesla','Infosys']

S3 = pd.Series([100,200,300,400], index = stocks_set1)
S4 = pd.Series([500,700,110,700], index = stocks_set2)

print (S3)
print ("\n")

print (S4)
print ("\n")

print (S3 + S4)
#Facebook e IBM irão ficar NaN, pois os mesmos não estão contidos nas 2 séries.

my_series = pd.Series ([ 10,20,30,40,50]) #give a better example

print (my_series.index)
print (my_series.values)
print (S3 + S4)

#return if the values r null or not. If it is True, the value is NULL
(S3 + S4).isnull()

print ((S3 + S4).dropna()) #dropna filters out missing data, drop all the NaN values
print ((S3 + S4).fillna(1)) #when u use fillna, the pandas change 'NaN' values to value 1

import numpy as np 

my_series = pd.Series ([10,20,30,40,50,60])
print (my_series)

my_series.apply(np.sin) #aplicando o seno dos valores
my_series.apply(np.tan)
