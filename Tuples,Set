#-------------------------------------------------Tuples----------------------------------------------------
new_tup = () #Empty tuple
type (new_tup)
my_tup = (10,20,30,40) #A tuple of integers
type (new_tup)
print (my_tup)

my_tup [0] #return the item at the 0th index
len (my_tup) #return the length of a tuple

new_tup = ((10,20,30), (10.1, 20.2, 30.3),("ten", "twenty", "thirty")) # A nested tuple
print (new_tup)

#---------------------------------------------------Sets-------------------------------------------------------------

new_set = {} #empty set ---> An empty set cannot be created
type (new_set)
new_set = {'Neo','Morphius','Trinity', 'Agent Smith', 'Agent Smith', 'Agent Smith', 'Agent Smith', 'Oracle' }
print (new_set) #the set will only print unique values

x_set = set ('THEMATRIX')
print (x_set)

y_set = set ('THETERMINATOR')
print (y_set)

x_set = set ('ABCDE')
y_set = set ('CDEFG')

print(x_set)
print(y_set)

x_set.union (y_set) #returns all the items that are present in the two sets, as a new set
#x_set | y_set union can be performed by using the pip '|' operator also

x_set.intersection (y_set) #return de intersection.
#x_set & y_set intersection can be performed by using the ampersand '&' operator

x_set.difference (y_set) #values what as in set 1 and not at set 2
x_set.difference_update(y_set) # the metod removes all the elements of set 2 common to set 1in set 1, and updates

print (x_set)
print (y_set)

#the diference update can be abbreviated in the shown manner 'x = x - y'
#x_set = x_set - y_set

x_set = set ('ABCDE')
y_set = set ('CDEFG')

x_set.isdisjoint(y_set) #the metod returns true if two sets have null intersection

x_set = set ('ABCDE')
x_set.add ('FGH') #add single item
print (x_set)

x_set.discard ('FGH') #remove the single item from the set
x_set.pop ()
print (x_set)

x_set.copy() #return te value above pop
x_set.clear ()
print (x_set)
