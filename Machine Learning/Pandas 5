import pandas as pd
import numpy as np

my_portfolio = {'Sector': ['IT', 'FMCG', 'Finance', ' Pharma', 'Pharma', 'FMCG', 'FMCG', 'IT', 'Finance',
                          'Real Estate'],
               'Company': ['Infosys','Dabur', 'DHFL', 'Dovos Lab', 'Lupin', 'Ruchira Papers', 'Britianna',
                          'Persistent Systems', 'Bajaj Finance', 'DLF'],
               'MarketCap': ['Large Cap', 'Large Cap', 'Mid Cap', 'Mid Cap', 'Mid Cap','Small Cap','Mid Cap',
                            'Small Cap', 'Large Cap', 'Mid Cap'],
               'Share Price': [1120,341,610,1123,741,185,5351,720,1937,217],
               'Amount Invested': [ 24000,16000,50000,23000,45000,12000,52000,18000,5000,3500]}

mp = pd.DataFrame(my_portfolio)
mp

#descrição dos grupos
print (mp.groupby('MarketCap').groups)
print (mp.groupby('Sector').groups)

#group by with multiple columns
print (mp.groupby(['MarketCap','Sector']).groups)

#interagindo através dos grupos pelo critério do grupo 'Sector'
grouped = mp.groupby('Sector')
for name,group in grouped:
    print(name)
    print (group)

#Interagindo pelo grupo MarketCap
grouped = mp.groupby('MarketCap')
for name,group in grouped:
    print(name)
    print (group)
    
#seleciona um grupo
grouped = mp.groupby('MarketCap')
print (grouped.get_group('Mid Cap'))

#Média de investimentos "agg = agregação"
import numpy as np
grouped = mp.groupby('MarketCap')
print (grouped['Amount Invested'].agg(np.mean))

#tamanho do grupo
grouped = mp.groupby('MarketCap')
print (grouped.agg(np.size))

#aplicando múltiplas agregações
grouped = mp.groupby('MarketCap')
print (grouped['Amount Invested'].agg([np.sum, np.mean]))

#transformação

my_portfolio = {'Sector': ['IT', 'FMCG', 'Finance', 'Pharma', 'Pharma',
                          'FMCG', 'FMCG', 'IT', 'Finance', 'Real Estate'],
            
            'Company':   ['Infosys', 'Dabur', 'DHFL', 'Divis Lab', 'Lupin',
                         'Ruchira Papers', 'Britianna','Persistent Systems','Bajaj Finance', 'DLF'],
            
            'MarketCap': ['Large Cap','Large Cap','Mid Cap','Mid Cap','Mid Cap',
                         'Small Cap','Mid Cap','Small Cap','Large Cap','Mid Cap'],
            
            'Share Price': [1120,341,610,1123,741,185,5351,720,1937,217],
                
            'Amount Invested': [24000,16000,50000,23000,45000,12000,52000,18000,5000,3500]}

mp = pd.DataFrame(my_portfolio)

print (mp)

grouped = mp.groupby('MarketCap')
z_score = lambda x: (x - x.mean()) / x.std()
print (grouped.transform(z_score))

#ele irá filtrar os grupos que tem menos de três empresas nesse grupo específico
print (mp.groupby('MarketCap').filter(lambda x: len(x)>=3))

left_df = pd.DataFrame({
         'id':[1,2,3,4,5],
         'Company': ['Infosys', 'SBI', 'Asian Paints', 'Maruti', 'Sun Pharma'],
         'Sector':['IT','Banks','Paints and Varnishes','Auto','Pharma']})

right_df = pd.DataFrame(
         {'id':[1,2,3,4,5],
         'Company': ['NTPC', 'TCS', 'Lupin', 'ICICI', 'M&M'],
         'Sector':['Power','IT','Pharma','Banks','Auto']})
         
#junção de 2 dataframes
print (pd.merge(left_df,right_df,on='id'))

#junção de 2 dfs com multiplas chaves
print (pd.merge(left_df,right_df,on=['Sector','Company']))

#junção unsando o 'how' argumento
# left join
print (pd.merge(left_df,right_df,on='Sector',how='left'))

#concatenação
print (pd.concat([left_df,right_df]))

#chamando as concatenações de x e y
print (pd.concat([left_df, right_df], keys = ['x','y']))

#concatenando em colunas
print (pd.concat([left_df,right_df], axis=1))
